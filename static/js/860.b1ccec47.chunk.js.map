{"version":3,"file":"static/js/860.b1ccec47.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactsBook/ContactsBook.module.css?8e1f","redux/contacts/selectors.js","components/ContactsBook/ContactForm.jsx","components/ContactsBook/ContactList.jsx","components/ContactsBook/SearchFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactsBook_box__7WsDD\",\"listTitle\":\"ContactsBook_listTitle__ssRZ6\",\"label\":\"ContactsBook_label__tIJzd\",\"button_add\":\"ContactsBook_button_add__iMWx2\",\"button_delete\":\"ContactsBook_button_delete__xEXmz\",\"error\":\"ContactsBook_error__f248Q\",\"list\":\"ContactsBook_list__tYjAY\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.loading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from 'react';\nimport css from './ContactsBook.module.css';\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nconst contactFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'To short!')\n    .max(30, 'So long!')\n    .required('Required'),\n  phone: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Invalid phone number format, should be 1111-11-11'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = values;\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (existingContact) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    resetForm({ name: '', phone: '' });\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      validationSchema={contactFormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label htmlFor=\"name\" className={css.label}>\n          Name\n        </label>\n        <br />\n        <Field name=\"name\" placeholder=\"Enter name\" />\n        <ErrorMessage name=\"name\" component=\"div\" className={css.error} />\n        <br />\n        <label htmlFor=\"phone\" className={css.label}>\n          Telephone number\n        </label>\n        <br />\n        <Field type=\"tel\" name=\"phone\" placeholder=\"Enter number\" />\n        <ErrorMessage name=\"phone\" component=\"div\" className={css.error} />\n        <br />\n        <button type=\"submit\" className={css.button_add}>\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","import { AiFillDelete } from 'react-icons/ai';\nimport css from './ContactsBook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = _id => {\n    dispatch(deleteContact(_id));\n  };\n  return (\n    <ul className={css.list}>\n      <h1 className={css.listTitle}>Contacts list</h1>\n      {contacts.map(contact => (\n        <li key={contact._id}>\n          {contact.name} - {contact.phone}\n          <button\n            className={css.button_delete}\n            onClick={() => handleDelete(contact._id)}\n          >\n            {' '}\n            <AiFillDelete />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const SearchFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={e => dispatch(setFilter(e.target.value))}\n      placeholder=\"Search contacts by name\"\n    />\n  );\n};\n","import { ContactForm } from 'components/ContactsBook/ContactForm';\nimport { ContactList } from 'components/ContactsBook/ContactList';\nimport { SearchFilter } from 'components/ContactsBook/SearchFilter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={11} lg={4}>\n          <ContactForm />\n          <div>{isLoading && 'Request in progress...'}</div>\n          <SearchFilter />\n        </Col>\n        <Col xs={11} lg={4}>\n          <ContactList />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectLoading","loading","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","contactFormSchema","Yup","shape","min","max","required","phone","matches","ContactForm","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","newContact","find","alert","addContact","htmlFor","className","css","placeholder","component","type","ContactList","map","onClick","_id","deleteContact","SearchFilter","value","onChange","e","setFilter","target","Tasks","isLoading","useEffect","fetchContacts","Container","Row","Col","xs","lg"],"sourceRoot":""}